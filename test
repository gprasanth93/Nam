<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Feed Generator</title>
  <style>
    body {
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f4f4f4;
    }

    header {
      background-color: #333;
      color: white;
      padding: 1em;
      text-align: center;
    }

    section {
      max-width: 800px;
      margin: 2em auto;
      padding: 1em;
      background-color: white;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1em;
    }

    label {
      font-weight: bold;
    }

    input, textarea {
      width: 100%;
      padding: 0.5em;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }

    button {
      width: 100%;
      padding: 0.7em;
      background-color: #333;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    button:hover {
      background-color: #555;
    }

    ul {
      list-style-type: none;
      padding: 0;
      margin: 0;
    }

    .feed-section {
      border: 1px solid #ddd;
      border-radius: 8px;
      margin-bottom: 1em;
      overflow: hidden;
      background-color: #f9f9f9;
    }

    .feed-content {
      padding: 1em;
    }

    .feed-title {
      font-size: 1.2em;
      margin-bottom: 0.5em;
    }

    .feed-description {
      color: #555;
    }
  </style>
</head>
<body>
  <header>
    <h1>Feed Generator</h1>
  </header>

  <section>
    <h2>Create Feed</h2>
    <form id="create-form">
      <label for="title">Title:</label>
      <input type="text" id="title" name="title" required>

      <label for="link">Link:</label>
      <input type="url" id="link" name="link" required>

      <label for="description">Description:</label>
      <textarea id="description" name="description" required></textarea>

      <button type="button" onclick="createFeed()">Create Feed</button>
    </form>

    <h2>Recent Feeds</h2>
    <ul id="feed-list">
      <!-- Feed items will be dynamically added here -->
    </ul>
  </section>

  <script>
    async function updateFeedList() {
      try {
        const response = await fetch('/feeds');
        const feeds = await response.json();

        const feedList = document.getElementById('feed-list');
        feedList.innerHTML = ''; // Clear previous entries

        feeds.forEach(feed => {
          const listItem = document.createElement('li');
          listItem.innerHTML = `
            <div class="feed-section">
              <div class="feed-content">
                <h3 class="feed-title">${feed.title}</h3>
                <p class="feed-description">${feed.description}</p>
              </div>
            </div>
          `;
          feedList.appendChild(listItem);
        });
      } catch (error) {
        console.error('Error fetching feeds:', error);
      }
    }

    // Function to create a new feed
    async function createFeed() {
      const title = document.getElementById('title').value;
      const link = document.getElementById('link').value;
      const description = document.getElementById('description').value;

      try {
        const response = await fetch('/add-feed', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ title, link, description }),
        });

        if (response.ok) {
          alert('Feed created successfully!');
          // Clear form fields
          document.getElementById('create-form').reset();
          // Fetch and update the feed list
          updateFeedList();
        } else {
          alert('Failed to create feed.');
        }
      } catch (error) {
        console.error('Error creating feed:', error);
      }
    }

    // Initial update of feed list on page load
    updateFeedList();
  </script>
</body>
</html>