const getKvmParam = (postParams) => {
    let kvmParam = {};
    let paramsObj = {};

    if (Array.isArray(postParams)) {
        for (let i = 0; i < postParams.length; i += 2) {
            const key = postParams[i];
            const value = postParams[i + 1];
            paramsObj[key] = value;
        }
    } else {
        paramsObj = Object.fromEntries(postParams.entries());
    }

    const dbName = paramsObj["dbName"];
    let isDevDb = false;

    if (dbName) {
        if (!getDBConfig(dbName)) isDevDb = true;
    } else {
        isDevDb = true;
    }

    const safeParseInt = (val, fallback) => {
        if (val === undefined || val === null || val === "") {
            return fallback;
        }
        return parseInt(val);
    };

    kvmParam.pgMakerMachine = paramsObj["machine"] ?? paramsObj["pgMakerMachine"] ?? (isDevDb ? 'firecracker' : 'baremetal');
    kvmParam.KVM_CLUSTER = paramsObj["KVM_CLUSTER"] ?? "db";
    kvmParam.KVM_VERSION = paramsObj["KVM_VERSION"] ?? "0.30";
    kvmParam.KVM_MEMORY_SIZE = safeParseInt(paramsObj["KVM_MEMORY_SIZE"], isDevDb ? 2048 : 16384);
    kvmParam.KVM_CPU_CORES = safeParseInt(paramsObj["KVM_CPU_CORES"], isDevDb ? 2 : 8);
    kvmParam.KVM_PERSISTENT_DISK_MB = safeParseInt(paramsObj["KVM_PERSISTENT_DISK_MB"], isDevDb ? 0 : 51200);
    kvmParam.KVM_DISK_SIZE_ADD = safeParseInt(paramsObj["KVM_DISK_SIZE_ADD"], undefined);
    kvmParam.KVM_NET_RATE_LIMITER = safeParseInt(paramsObj["KVM_NET_RATE_LIMITER"], 0);
    kvmParam.KVM_DISK_RATE_LIMITER = safeParseInt(paramsObj["KVM_DISK_RATE_LIMITER"], 0);
    kvmParam.KVM_USE_FIRECRACKER = paramsObj["KVM_USE_FIRECRACKER"] ?? true;

    return kvmParam;
};