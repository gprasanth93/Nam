

## 🚀 KVM Migration Kick-Off – First Wave: C0 / S0 / I0 Class Databases

We’re excited to announce that we’re beginning the **KVM migration rollout** for our **lightweight database classes (C0 / S0 / I0)**.
These include databases identified as **Tiny Tier** workloads — low-traffic, low-IO, and minimal compute footprint instances.

### 📊 Overview

| Region | Databases | Environment | Notes                     |
| :----- | :-------- | :---------- | :------------------------ |
| **UK** | 131       | UAT / PROD  | Scheduled for later phase |
| **HK** | 30        | UAT / PROD  | **First rollout region**  |
| **US** | 53        | UAT / PROD  | Planned for next wave     |

A total of **214 databases** are part of this first-phase migration.

---

### 🗓 Rollout Schedule – Hong Kong Region

#### **Phase 1: HK – UAT Environment**

* 🕙 **Tomorrow, 10:00 AM EDT:**
  Standby databases (UAT) will be moved to KVM.
* 🕙 **Friday, 10:00 AM EDT:**
  Primary databases (UAT) will be moved to KVM.

#### **Phase 2: HK – PROD Environment**

* 🕙 **Monday, 10:00 AM EDT:**
  Standby databases (PROD) will be moved to KVM.
* 🕙 **Wednesday, 10:00 AM EDT:**
  Primary databases (PROD) will be moved to KVM.

---

### ⚠️ Expected Downtime

* During **standby migrations**, no downtime is expected.
* During **primary migrations**, a **brief downtime (1–3 minutes)** may occur while replication roles switch and the instance transitions to KVM.
  Application owners will receive a confirmation once the databases are healthy and fully online post-migration.

---

### 💡 Why These Databases First?

C0 / S0 / I0 databases are smaller, lower-throughput instances ideal for the first wave of KVM adoption.
This controlled rollout helps us:

* Validate automated provisioning and switchover workflows,
* Observe how smaller databases perform under Firecracker-based virtualization, and
* Fine-tune resource templates before scaling to higher-class workloads.

---

### 🧭 Visibility & Monitoring

All migrated databases will appear in the **PgMaker Metrics Dashboard**, where you can track:

* Real-time CPU, memory, and IO trends
* Assigned KVM class (Compute, Storage, IO)
* Replica status and replication lag
* Migration status (standby → primary → KVM)

---

### 💬 Need Help or Have Concerns?

If you notice any issues post-migration or believe your database sizing (C/S/I class) needs review, please reach out to the **PgMaker Team**.
We’ll work closely with each team to ensure performance, stability, and sizing accuracy as we expand the KVM rollout across regions.

---

Would you like me to produce this as a **formatted Markdown post** (for Confluence / internal blog) or a **PDF announcement** with your PgMaker branding header (like the previous one)?
