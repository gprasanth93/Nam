// Import required modules
const express = require('express');
const { Pool } = require('pg');
const Parser = require('rss-parser');

// Set up Express app
const app = express();
const port = 3000;

// Configure PostgreSQL connection
const pool = new Pool({
  user: 'your_username',
  host: 'localhost',
  database: 'your_database',
  password: 'your_password',
  port: 5432,
});

// Use middleware to parse JSON in requests
app.use(express.json());

// Endpoint to get all feeds
app.get('/feeds', async (req, res) => {
  try {
    const result = await pool.query('SELECT * FROM feeds ORDER BY id DESC');
    res.json(result.rows);
  } catch (error) {
    console.error('Error fetching feeds:', error);
    res.status(500).send('Internal Server Error');
  }
});

// Endpoint to add a new feed
app.post('/add-feed', async (req, res) => {
  const { title, link, description } = req.body;

  try {
    const result = await pool.query('INSERT INTO feeds (title, link, description) VALUES ($1, $2, $3) RETURNING *', [title, link, description]);

    const newFeed = result.rows[0];
    res.status(201).json(newFeed);
  } catch (error) {
    console.error('Error adding feed:', error);
    res.status(500).send('Internal Server Error');
  }
});

// Endpoint to generate RSS feed
app.get('/generate-rss', async (req, res) => {
  try {
    const feeds = await pool.query('SELECT * FROM feeds ORDER BY id DESC');
    const items = feeds.rows.map(feed => ({
      title: feed.title,
      link: feed.link,
      description: feed.description,
    }));

    const feedData = {
      title: 'Your Feed Title',
      link: 'http://your-website.com',
      description: 'Your feed description',
      items,
    };

    const parser = new Parser();
    const rss = await parser.parseURL(feedData);

    res.set('Content-Type', 'text/xml');
    res.send(rss);
  } catch (error) {
    console.error('Error generating RSS feed:', error);
    res.status(500).send('Internal Server Error');
  }
});

// Start the server
app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});